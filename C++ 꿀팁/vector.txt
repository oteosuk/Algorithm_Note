
[벡터에서 문자열 탐색 및 벡터에 문자열 삽입]

string s;
cin >> s;
if (find(vec.begin(), vec.end(), s) == vec.end())  => vec을 다 탐색해서 s가 없으면 vec.end() 반환
	vec.push_back(s);                              => 즉 입력받은 s가 vec에 없다면 push_back 즉 뒤에 s를 삽입

===================================================================================================

[벡터 sort함수로 정렬하기]

bool compare(string a, string b)       => 밑에 sort함수에 넣을 조건
{
	if (a.length() == b.length())
		return a < b;                  => a와 b가 길이가 같다면, 자동으로 사전상으로 더 먼저오는걸 앞에
	return a.length() < b.length();    => a 와 b가 길이가 다르다면 더 짧은게 앞에
}

sort(vec.begin(), vec.end(), compare); => 위에 작성한 compare 함수 조건에 맞게 정렬한다.

===================================================================================================

[벡터요소찾기]

	vector<int> v;
	for (int i = 0; i < 10; i++)
	{
		int a;
		int res;
		cin >> a;

		res = a % 42;
		if ((find(v.begin(), v.end(), res) != v.end()) == 0)   => 이거 find함수가 못찾으면 -1을 반환하는데 이 -1은 자료형이 unsigned 라서 -1을 출력하고싶다면(int)로 바꿔줘야한다.
		{
			v.push_back(res);
		}
	}
	cout << v.size() << endl;

===================================================================================================

[벡터의 값 하나하나씩 불러오는거]

for (string x : v)
		cout << x << endl;

===================================================================================================

[배열 vector / 2차원 vector]

vector<int> v[1001];
이런식으로 배열 벡터로 사용할 수 있다.
v[0].push_back(넣고싶은값)
v[5].push_back(넣고싶은값)

===================================================================================================

[벡터 복사]

//방법1 
v2.assign(v1.begin(),v1.end());

//방법2 
copy(v1.begin(),v1.end(),v2.begin());

//방법3
vector<int> v(n);
vector<int> copyv(v);

===================================================================================================

[벡터 중복제거(sort와 unique 이용)]

1 2 2 3 4 4 5
=> unique(v.begin(), v.end())를 해주면

1 2 3 4 5 4 5 
=> 이렇게 중복되지 않는 원소들을 앞에서 부터 채워주고 뒤에 남는 공간은 원본 유지를 한다.
=> unique함수는 정렬된 벡터에서 시행시켜줘야만 한다.(즉 sort된 벡터에 unique를 해야한다.)
=> 또한 unique 함수는 원본이 유지되는 원소들의 첫번째 주소값(뒤에 4 5 에서 4)을 반환하기 때문에
v.erase(unique(v.begin(), v.end()), v.end()); 를 해주면 뒤에 4 5를 지워 1 2 3 4 5 만 남길수 있다.