
using ll = long long;
using ld = long double;
const double PI = 3.1415926535;

====================================================================

[상수선언(유지보수)]

<define 이용>
define은 전처리기라서 main밖에 써야함
#define PI 3.141592 (세미콜론이 없는게 특징)

<const 이용>
일반적으로 대문자로 선언
상수는 반드시 선언과 동시에 초기화를 해야함
const int WIDTH = 100;

=> const 가 define 보다 효율적이다.
const를 사용하게 되면 컴파일 과정에서 상수 하나를 계속 돌려 쓰게되지만
define을 사용하였을 경우는 define으로 정의된 값들을 치환하는 과정에서
사용한 상수만큼의 사본이 생겨나게 되어 효율적인 부분에서 좋지 않다.

- int arr[5]; 로만 해버리면 그냥 쓰레기값들이 들어가있다.

- using long long = ll / typedef long long ll 둘다 되는데 using이 왠만하면 좋다.

- #define endl ‘\n’ 로 endl를 치환해주는 행위는 using 이나 typedef로 불가능(오류뜸) 
⇒ 기존에 endl 가 이미 c++에 포함되어있는 기능인데 재정의하면 기존에 있는 endl가 애매해지기 때문
   define로는 가능한 이유는 define 단순히 endl글자를 컴파일과정에서 ‘\n’로 코드를 치환해주는 것이기 때문