
[입력 버퍼 비우기]

cin.ignore(); 하면 1개 비워짐 cin.ignore(10) 하면 10개문자만큼 버퍼비워짐

cin >> t; 
cin의 입력버퍼에는 정수 t와 \n이 들어간다. \n 얘가 안 없어진다. 
따라서 getline()에서 인자입력을 default로는 \n으로 구분하기 때문에 cin의 입력버퍼를 비워줘야 된다. 
cin.ignore(); (cin의 입력버퍼를 비워주는 함수이다.)

==============================================================================

[printf scanf 형식]

#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

scanf("%d\n%d", &정수, &정수);  // 한칸 엔터 입력 받기
printf("%.6f", &실수); //소수 6자리까지
scanf("%3d", &a); // 예를들어 3214125 이렇게 입력하면 앞에 3자리 321 만 들어간다

==============================================================================

[숫자인지 판별해주는 함수]

isdigit(int c)
숫자인지 판별해주는 함수 
char형의 숫자가 매개변수로 들어간다.
숫자면 0이 아닌 무언가의 숫자로 반환해준다.

==============================================================================

[type 알아내기]

#include <typeinfo>
typeid(i).name()

==============================================================================

[기타 사실들]

- int arr[5]; 로만 해버리면 그냥 쓰레기값들이 들어가있다.

- using long long = ll / typedef long long ll 둘다 되는데 using이 왠만하면 좋다.

- #define endl ‘\n’ 로 endl를 치환해주는 행위는 using 이나 typedef로 불가능(오류뜸) 
⇒ 기존에 endl 가 이미 c++에 포함되어있는 기능인데 재정의하면 기존에 있는 endl가 애매해지기 때문
   define로는 가능한 이유는 define 단순히 endl글자를 컴파일과정에서 ‘\n’로 코드를 치환해주는 것이기 때문
